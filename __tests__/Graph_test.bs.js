// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var BrowserLogger = require("bs-log/src/BrowserLogger.bs.js");
var Graphs$KaroshibeeReTree = require("../src/Graphs.bs.js");
var Identity$KaroshibeeReTree = require("../src/Identity.bs.js");

var id1 = Identity$KaroshibeeReTree.FocusId.create("1");

var id2 = Identity$KaroshibeeReTree.FocusId.create("2");

var id3 = Identity$KaroshibeeReTree.FocusId.create("3");

var id4 = Identity$KaroshibeeReTree.FocusId.create("4");

function makeGraph(param) {
  return Graphs$KaroshibeeReTree.Graph.addNodeUnder(Graphs$KaroshibeeReTree.Graph.addNodeUnder(Graphs$KaroshibeeReTree.Graph.addNodeUnder(Graphs$KaroshibeeReTree.Graph.addNode(Graphs$KaroshibeeReTree.Graph.empty(/* () */0), id1, {
                          one: 1,
                          two: "one"
                        }), id2, {
                      one: 2,
                      two: "two"
                    }, Identity$KaroshibeeReTree.convertFocusToParent(id1)), id3, {
                  one: 3,
                  two: "three"
                }, Identity$KaroshibeeReTree.convertFocusToParent(id1)), id4, {
              one: 4,
              two: "four"
            }, Identity$KaroshibeeReTree.convertFocusToParent(id3));
}

Jest.describe("setSubGraphForNode-should-set-subgraph", (function (param) {
        var g = makeGraph(/* () */0);
        var _test = function (g, s) {
          return Jest.test("_test", (function (param) {
                        return Jest.Expect.toBe(true, Jest.Expect.expect(Graphs$KaroshibeeReTree.Graph.containsId(g, Identity$KaroshibeeReTree.FocusId.create(s))));
                      }));
        };
        _test(g, "1");
        _test(g, "2");
        _test(g, "3");
        _test(g, "4");
        var id5 = Identity$KaroshibeeReTree.FocusId.create("5");
        var id6 = Identity$KaroshibeeReTree.FocusId.create("6");
        var gChild = Graphs$KaroshibeeReTree.Graph.addNode(Graphs$KaroshibeeReTree.Graph.addNode(Graphs$KaroshibeeReTree.Graph.empty(/* () */0), id5, {
                  one: 5,
                  two: "five"
                }), id6, {
              one: 6,
              two: "six"
            });
        _test(gChild, "5");
        _test(gChild, "6");
        BrowserLogger.debugWithData("Graph_test-KaroshibeeReTree", "about to set new subgraph", /* tuple */[
              "",
              ""
            ]);
        var match = Graphs$KaroshibeeReTree.Graph.setSubGraphForNode(g, id2, gChild);
        if (match.tag) {
          return Jest.test("fail", (function (param) {
                        return Jest.Expect.toBe(false, Jest.Expect.expect(true));
                      }));
        } else {
          var g1 = match[0];
          _test(g1, "5");
          return _test(g1, "6");
        }
      }));

var M = /* alias */0;

var I = /* alias */0;

var ID = /* alias */0;

var CID = /* alias */0;

var PID = /* alias */0;

var P = /* alias */0;

exports.M = M;
exports.I = I;
exports.ID = ID;
exports.CID = CID;
exports.PID = PID;
exports.P = P;
exports.id1 = id1;
exports.id2 = id2;
exports.id3 = id3;
exports.id4 = id4;
exports.makeGraph = makeGraph;
/* id1 Not a pure module */
